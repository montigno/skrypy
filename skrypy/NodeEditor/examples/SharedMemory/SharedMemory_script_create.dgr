[diagram]
link=[N3] node=[A3:#Node#S0:MemName2]
link=[N2] node=[A2:#Node#S0:myFile]
link=[N0] node=[A0:#Node#S0:myList]
link=[N1] node=[A1:#Node#S0:MemName1]
constant=[A3] value=['fgh'] format=[str] label=[MemName2] RectF=[(-446.83, 282.05, 44.0, 35.0)] 
constant=[A2] value=['/home/olivier/img_n4bias.nii'] format=[path] label=[myFile] RectF=[(-558.87, 189.12, 187.0, 35.0)] 
cluster=[A0] value=[(0, [22, 33, 41, 65], 256)] format=[list_int] label=[myList] RectF=[(-779.4200000000001, -68.44, 423.0, 33.0)] 
constant=[A1] value=['adc'] format=[str] label=[MemoryName1] RectF=[(-458.51, 52.78, 45.0, 35.0)] 
script=[S0] title=[Script_python] inputs=[['myList', 'in', 'list_int'], ['MemName1', 'in', 'str'], ['myFile', 'in', 'path'], ['MemName2', 'in', 'str']] outputs=[] code=[your code] RectF=[(-234.0, -133.4, 517.0, 555.0)]
[source S0]
["MemName1='adc'", 'myList=[22, 33, 41, 65]', "myFile='/home/olivier/img_n4bias.nii'", "MemName2='fgh'"]
from multiprocessing import shared_memory

len_data1 = len(myList)
try:
    shm_a = shared_memory.SharedMemory(MemName1, create=True, size=len_data1)
except:
    shm_a = shared_memory.SharedMemory(MemName1)
    shm_a.close()
    shm_a.unlink()
    shm_a = shared_memory.SharedMemory(MemName1, create=True, size=len_data1)

buffer1 = shm_a.buf
len(buffer1)
buffer1[:len_data1] = bytearray(myList)
shm_a.close()

len_data2 = len(myFile)
print(len_data2)
try:
    shm_b = shared_memory.SharedMemory(MemName2, create=True, size=len_data2)
except:
    shm_b = shared_memory.SharedMemory(MemName2)
    shm_b.close()
    shm_b.unlink()
    shm_b = shared_memory.SharedMemory(MemName2, create=True, size=len_data2)

buffer2 = shm_b.buf
len(buffer2)
buffer2[:len_data2] = bytes(myFile, encoding='utf-8')
shm_b.close()

[]
[/source S0]

[execution]
[]
['S0']
{}
[]
{}
[]
[interlinks]
[]
